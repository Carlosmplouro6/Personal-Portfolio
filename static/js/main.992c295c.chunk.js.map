{"version":3,"sources":["imgs/TxtIcon.svg","imgs/MonitorPortfolioImproved.png","imgs/FolderIcon.svg","imgs/GithubIcon.svg","imgs/LinkedinIcon.svg","imgs/CoronaFocus.png","imgs/Consequat.png","imgs/leftArrow.svg","imgs/imageIcon.svg","fonts/segoe-ui.otf","context/PortfolioContext.js","components/ButtonBay/ButtonBay.js","components/FolderContent/FolderContent.js","components/Folder/Folder.js","components/Txt/Txt.js","components/Galerie/Galerie.js","components/Screen/Screen.js","components/Monitor/Monitor.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PortfolioContext","createContext","PortfolioProvider","children","useState","openFolder","setopenFolder","folderContent","setFolderContent","lastFolderContent","setLastFolderContent","openTxt","setopenTxt","txtContent","setTxtContent","openGalerie","setopenGalerie","galerieContent","setGalerieContent","Provider","value","ButtonBay","useContext","SetTxt","className","onClick","folderName","type","name","inside","txt","image","CoronaFocus","link","Consequat","src","folderIcon","alt","txtIcon","target","rel","href","githubIcon","linkedinIcon","FolderContent","openNew","content","newFolderContent","console","log","map","index","key","Folder","leftArrow","Txt","Galerie","imageIcon","Screen","TxtType","el","toRotate","period","this","loopNum","parseInt","tick","isDeleting","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","css","createElement","body","appendChild","data-period","data-type","Monitor","monitor","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.992c295c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TxtIcon.8f40660c.svg\";","module.exports = __webpack_public_path__ + \"static/media/MonitorPortfolioImproved.8feb412f.png\";","module.exports = __webpack_public_path__ + \"static/media/FolderIcon.d121cf7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/GithubIcon.f23f3db2.svg\";","module.exports = __webpack_public_path__ + \"static/media/LinkedinIcon.113511bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/CoronaFocus.8f70a52a.png\";","module.exports = __webpack_public_path__ + \"static/media/Consequat.3de414a1.png\";","module.exports = __webpack_public_path__ + \"static/media/leftArrow.a2c5e63c.svg\";","module.exports = __webpack_public_path__ + \"static/media/imageIcon.fb585b62.svg\";","module.exports = __webpack_public_path__ + \"static/media/segoe-ui.c4b43d1f.otf\";","import React, { createContext, useState } from \"react\";\r\n\r\nexport const PortfolioContext = createContext();\r\n\r\nexport const PortfolioProvider = ({ children }) => {\r\n  const [openFolder, setopenFolder] = useState(false);\r\n  const [folderContent, setFolderContent] = useState([]);\r\n  const [lastFolderContent, setLastFolderContent] = useState();\r\n\r\n  const [openTxt, setopenTxt] = useState(false);\r\n  const [txtContent, setTxtContent] = useState();\r\n\r\n  const [openGalerie, setopenGalerie] = useState(false);\r\n  const [galerieContent, setGalerieContent] = useState();\r\n\r\n  return (\r\n    <PortfolioContext.Provider\r\n      value={{\r\n        openFolder,\r\n        setopenFolder,\r\n        folderContent,\r\n        setFolderContent,\r\n        lastFolderContent,\r\n        setLastFolderContent,\r\n        openTxt,\r\n        setopenTxt,\r\n        txtContent,\r\n        setTxtContent,\r\n        openGalerie,\r\n        setopenGalerie,\r\n        galerieContent,\r\n        setGalerieContent,\r\n      }}\r\n    >\r\n      {children}\r\n    </PortfolioContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport \"./ButtonBay.css\";\r\n\r\nimport folderIcon from \"../../imgs/FolderIcon.svg\";\r\nimport txtIcon from \"../../imgs/TxtIcon.svg\";\r\nimport githubIcon from \"../../imgs/GithubIcon.svg\";\r\nimport linkedinIcon from \"../../imgs/LinkedinIcon.svg\";\r\nimport CoronaFocus from \"../../imgs/CoronaFocus.png\";\r\nimport Consequat from \"../../imgs/Consequat.png\";\r\n\r\nimport { PortfolioContext } from \"../../context/PortfolioContext\";\r\n\r\nconst ButtonBay = () => {\r\n  const {\r\n    setopenFolder,\r\n    setFolderContent,\r\n    setopenTxt,\r\n    setTxtContent,\r\n  } = useContext(PortfolioContext);\r\n\r\n  function SetFolder(folderContent) {\r\n    setopenFolder(true);\r\n    setFolderContent(folderContent);\r\n  }\r\n\r\n  function SetTxt(txtContent) {\r\n    setopenTxt(true);\r\n    setTxtContent(txtContent);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ButtonContainer\">\r\n      <div\r\n        className=\"Button\"\r\n        onClick={() =>\r\n          SetFolder([\r\n            {\r\n              folderName: \"Projects\",\r\n              type: \"folder\",\r\n              name: \"CoronaFocus\",\r\n              inside: [\r\n                {\r\n                  folderName: \"CoronaFocus\",\r\n                  type: \"txt\",\r\n                  name: \"About CoronaFocus.txt\",\r\n                  inside: [\r\n                    {\r\n                      name: \"About\",\r\n                      txt: (\r\n                        <p>\r\n                          This is a website that's using a public API to compare\r\n                          the Covid19 cases per country, it was my first try at\r\n                          building something around a API, i quickly fell in\r\n                          love with API's and json and the power that comes with\r\n                          it. I also took advantage of this website to learn how\r\n                          domain names work and to oficially get my first one,\r\n                          it was a really fun project, if i was able to change\r\n                          something around would be to prepare my design before\r\n                          starting to code, being the design the part i dislike\r\n                          the most of the project. Overall it was a really fun\r\n                          project and i learned alot with it, the project is\r\n                          also fully responsive.\r\n                        </p>\r\n                      ),\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: \"txt\",\r\n                  name: \"CoronaFocus Stack.txt\",\r\n                  inside: [\r\n                    {\r\n                      name: \"Stack\",\r\n                      txt: (\r\n                        <>\r\n                          <p>javascript</p>\r\n                          <p>HTML</p>\r\n                          <p>CSS</p>\r\n                          <p>SCSS</p>\r\n                          <p>Chart.js</p>\r\n                        </>\r\n                      ),\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: \"image\",\r\n                  name: \"Website Images\",\r\n                  image: CoronaFocus,\r\n                },\r\n                {\r\n                  type: \"github\",\r\n                  name: \"CoronaFocus Source Code\",\r\n                  link: \"https://github.com/Carlosmplouro6/CoronaFocus\",\r\n                },\r\n                {\r\n                  type: \"link\",\r\n                  name: \"CoronaFocus Page Link\",\r\n                  link: \"https://corona-focus.pt/\",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              type: \"folder\",\r\n              name: \"Consequat\",\r\n              inside: [\r\n                {\r\n                  folderName: \"Consequat\",\r\n                  type: \"txt\",\r\n                  name: \"About Consequat.txt\",\r\n                  inside: [\r\n                    {\r\n                      name: \"About\",\r\n                      txt: (\r\n                        <p>\r\n                          This is my first try at building a webapp with react,\r\n                          and honestly the moment i started using it i fell in\r\n                          love with React and everything it makes possible, one\r\n                          of my favorite things to learn at the moment and it\r\n                          was a real eye opening about the possibilities it\r\n                          brings, this website was build using only funcional\r\n                          components with react hooks and the usage of a\r\n                          external public API really helped my understand some\r\n                          of the inner workings of react and how to piece it all\r\n                          together.\r\n                        </p>\r\n                      ),\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: \"txt\",\r\n                  name: \"Consequat Stack.txt\",\r\n                  inside: [\r\n                    {\r\n                      name: \"Stack\",\r\n                      txt: (\r\n                        <>\r\n                          <p>React</p>\r\n                          <p>javascript</p>\r\n                          <p>HTML</p>\r\n                          <p>CSS</p>\r\n                          <p>SCSS</p>\r\n                        </>\r\n                      ),\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: \"image\",\r\n                  name: \"Website Images\",\r\n                  image: Consequat,\r\n                },\r\n                {\r\n                  type: \"github\",\r\n                  name: \"Consequat Source Code\",\r\n                  link: \"https://github.com/Carlosmplouro6/consequat\",\r\n                },\r\n                {\r\n                  type: \"link\",\r\n                  name: \"Consequat Page Link\",\r\n                  link: \"https://carlosmplouro6.github.io/consequat/\",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              type: \"folder\",\r\n              name: \"Portfolio\",\r\n              inside: [\r\n                {\r\n                  folderName: \"PortFolio\",\r\n                  type: \"txt\",\r\n                  name: \"About the Portfolio.txt\",\r\n                  inside: [\r\n                    {\r\n                      name: \"About the Portfolio.txt\",\r\n                      txt: (\r\n                        <p>\r\n                          As you might imagine, this is the portfolio you are\r\n                          right now, it was all built using React because i\r\n                          really enjoy the whole workflow and what it makes\r\n                          possible, i wanted to make a diferent portfolio from\r\n                          most of the ones i found online, i had this idea and i\r\n                          tought it would be a fun thing to play around with, so\r\n                          i started building, at the moment i really like the\r\n                          portfolio, how it looks and the features that it has,\r\n                          i will be adding more features and some more fun side\r\n                          parts in the future in a attempt to improve upon it\r\n                          and make it more similar to a dark theme windows OS.\r\n                          As a fun side information the monitor where everything\r\n                          is happening its actually my real monitor the one i\r\n                          use the most. Both the monitor picture and my\r\n                          background image (the pretty boy) were taken by my\r\n                          brother (Luis Louro) who is a photographer.\r\n                        </p>\r\n                      ),\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: \"txt\",\r\n                  name: \"Portfolio Stack.txt\",\r\n                  inside: [\r\n                    {\r\n                      name: \"Portfolio Stack\",\r\n                      txt: (\r\n                        <>\r\n                          <p>React</p>\r\n                          <p>javascript</p>\r\n                          <p>HTML</p>\r\n                          <p>CSS</p>\r\n                          <p>SCSS</p>\r\n                        </>\r\n                      ),\r\n                    },\r\n                  ],\r\n                },\r\n                {\r\n                  type: \"github\",\r\n                  name: \"Portfolio Source Code\",\r\n                  link: \"https://github.com/Carlosmplouro6/Personal-Portfolio\",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              type: \"txt\",\r\n              name: \"LourixPlans\",\r\n              inside: [\r\n                {\r\n                  name: \"LourixPlans\",\r\n                  txt:\r\n                    \"Lourix is a company that focus on building great games for better communities\",\r\n                },\r\n              ],\r\n            },\r\n          ])\r\n        }\r\n      >\r\n        <img src={folderIcon} alt=\"\" />\r\n        <p className=\"ButtonName\">Projects</p>\r\n      </div>\r\n\r\n      <div\r\n        className=\"Button\"\r\n        onClick={() =>\r\n          SetTxt([\r\n            {\r\n              name: \"About Me\",\r\n              txt: (\r\n                <p>\r\n                  Hello, welcome to my portfolio my name is Carlos Louro im\r\n                  portuguese and im finishing a degree in biomedical\r\n                  technologies, i love programming and i love creating fullstack\r\n                  websites and games. I learned that i had a passion with\r\n                  programming when i started learning it at the university, it\r\n                  started in a basic class that taught C, the moment i started\r\n                  learning the inner workings and how i could build stuff with\r\n                  it i fell in love, and i also felt i was made for it, there\r\n                  was a match and from there i started learning more and more\r\n                  about the different fields inside it, i started learning C# to\r\n                  work with unity making games and i had a lot of fun doing so,\r\n                  afterwards i was sure this was what i would want to work with\r\n                  for the rest of my life, so i started learning more about the\r\n                  diferent fields and i got to the conclusion that what i wanted\r\n                  to make and focus on professionaly was web development so i\r\n                  started with the basics like everyone does, a bit of html here\r\n                  a little splash of css there and i finally got to javascript,\r\n                  the ease i had with that language really made me sure about my\r\n                  choices, i fell in love with it, afterwards i started\r\n                  developing some harder and more interesting ideas and started\r\n                  learning react for the frontend and afterwards i started\r\n                  learning node.js with express for the backend, i also learned\r\n                  mysql in university so i just joined that to my stack i was a\r\n                  full stack developer. Starting to build something from scratch\r\n                  and touching both the backend and the frontend was amazing. At\r\n                  the moment together with my fullstack development studies im\r\n                  also using react native to build apps, my journey so far in\r\n                  this whole area is something really amazing im really happy\r\n                  about my choices.\r\n                </p>\r\n              ),\r\n            },\r\n          ])\r\n        }\r\n      >\r\n        <img src={txtIcon} alt=\"\" />\r\n\r\n        <p className=\"ButtonName\">AboutMe</p>\r\n      </div>\r\n\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"Button\"\r\n        href=\"https://github.com/Carlosmplouro6\"\r\n      >\r\n        <img className=\"\" src={githubIcon} alt=\"\" />\r\n\r\n        <p className=\"ButtonName\">Github</p>\r\n      </a>\r\n\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        className=\"Button\"\r\n        href=\"https://www.linkedin.com/in/carlos-louro-a3a1a61a7/\"\r\n      >\r\n        <img className=\"\" src={linkedinIcon} alt=\"\" />\r\n\r\n        <p className=\"ButtonName\">LinkedIn</p>\r\n      </a>\r\n\r\n      <div\r\n        className=\"Button\"\r\n        onClick={() =>\r\n          SetTxt([\r\n            {\r\n              name: \"Technologies\",\r\n              txt: (\r\n                <>\r\n                  <p>javascript</p>\r\n                  <p>HTML</p>\r\n                  <p>CSS</p>\r\n                  <p>SCSS</p>\r\n                  <p>React</p>\r\n                  <p>Node.js</p>\r\n                  <p>Express</p>\r\n                  <p>MYSQL</p>\r\n                  <p>MongoDB</p>\r\n                  <p>Firebase</p>\r\n                  <p>Github</p>\r\n                </>\r\n              ),\r\n            },\r\n          ])\r\n        }\r\n      >\r\n        <img src={txtIcon} alt=\"\" />\r\n\r\n        <p className=\"ButtonName\">Technologies</p>\r\n      </div>\r\n      <div\r\n        className=\"Button\"\r\n        onClick={() =>\r\n          SetTxt([\r\n            {\r\n              name: \"Experience\",\r\n              txt: (\r\n                <>\r\n                  <p>Experience outside WebDev:</p>\r\n                  <p>-Macdonalds for 1 year</p>\r\n                  <p>-Factory worker for 1 year</p>\r\n                  <p>Experience in WebDev:</p>\r\n                  <p>-FullStack at GlitchGlobal Since 09/2020</p>\r\n                </>\r\n              ),\r\n            },\r\n          ])\r\n        }\r\n      >\r\n        <img src={txtIcon} alt=\"\" />\r\n\r\n        <p className=\"ButtonName\">Experience</p>\r\n      </div>\r\n      <div\r\n        className=\"Button\"\r\n        onClick={() =>\r\n          SetTxt([\r\n            {\r\n              name: \"Contact Me\",\r\n              txt: (\r\n                <>\r\n                  <p>\r\n                    Feel free to contact me for any reason at all, be it work\r\n                    related or if you just want to talk with me about a cool new\r\n                    framework you have found out.\r\n                  </p>\r\n                  <p>You can use any of the following methods:</p>\r\n                  <p>\r\n                    Email:\r\n                    <a href=\"mailto:carlosmplouro6@gmail.com\">\r\n                      carlosmplouro6@gmail.com\r\n                    </a>\r\n                  </p>\r\n                  <p>\r\n                    LinkedIn:\r\n                    <a\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      href=\"https://www.linkedin.com/in/carlos-louro-a3a1a61a7/\"\r\n                    >\r\n                      Carlos Louro\r\n                    </a>\r\n                  </p>\r\n                </>\r\n              ),\r\n            },\r\n          ])\r\n        }\r\n      >\r\n        <img src={txtIcon} alt=\"\" />\r\n\r\n        <p className=\"ButtonName\">ContactMe</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonBay;\r\n","import React, { useContext } from \"react\";\r\nimport \"./FolderContent.css\";\r\nimport { PortfolioContext } from \"../../context/PortfolioContext\";\r\n\r\nconst FolderContent = () => {\r\n  const {\r\n    folderContent,\r\n    setopenFolder,\r\n    setFolderContent,\r\n    setLastFolderContent,\r\n    setopenTxt,\r\n    setTxtContent,\r\n    setopenGalerie,\r\n    setGalerieContent,\r\n  } = useContext(PortfolioContext);\r\n\r\n  function openNew(content) {\r\n    if (content.type === \"folder\") {\r\n      SetFolder(content.inside);\r\n    } else if (content.type === \"txt\") {\r\n      SetTxt(content.inside);\r\n    } else if (content.type === \"image\") {\r\n      console.log(content);\r\n      SetGalerie(content);\r\n    }\r\n  }\r\n\r\n  function SetFolder(newFolderContent) {\r\n    setLastFolderContent(folderContent);\r\n    setopenFolder(true);\r\n    setFolderContent(newFolderContent);\r\n  }\r\n\r\n  function SetTxt(txtContent) {\r\n    setopenTxt(true);\r\n    setTxtContent(txtContent);\r\n  }\r\n\r\n  function SetGalerie(galerieContent) {\r\n    setopenGalerie(true);\r\n    setGalerieContent(galerieContent);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {folderContent.map((content, index) => (\r\n        <div key={index}>\r\n          {content.link ? (\r\n            <div\r\n              className=\"folderLines\"\r\n              key={index}\r\n              onClick={() => {\r\n                openNew(content);\r\n              }}\r\n            >\r\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={content.link}>\r\n                <div className=\"folderLineContainer\">\r\n                  <div className={content.type}></div>\r\n                  <div className=\"subfolderName\">{content.name}</div>\r\n                </div>\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"folderLines\"\r\n              key={index}\r\n              onClick={() => {\r\n                openNew(content);\r\n              }}\r\n            >\r\n              <div className=\"folderLineContainer\">\r\n                <div className={content.type}></div>\r\n                <div className=\"subfolderName\">{content.name}</div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolderContent;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Folder.css\";\r\nimport { PortfolioContext } from \"../../context/PortfolioContext\";\r\nimport FolderContent from \"../FolderContent/FolderContent\";\r\n\r\nimport leftArrow from \"../../imgs/leftArrow.svg\";\r\n\r\nconst Folder = () => {\r\n  const {\r\n    setopenFolder,\r\n    folderContent,\r\n    setFolderContent,\r\n    lastFolderContent,\r\n    setLastFolderContent,\r\n  } = useContext(PortfolioContext);\r\n\r\n  function closeFolder() {\r\n    setopenFolder(false);\r\n  }\r\n\r\n  function backFolder() {\r\n    if (lastFolderContent === folderContent || lastFolderContent == null) {\r\n      setopenFolder(false);\r\n      setLastFolderContent(null);\r\n    } else if (lastFolderContent != null) {\r\n      setFolderContent(lastFolderContent);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"outsideFolder\">\r\n        <div className=\"folderTopBar\">\r\n          <div className=\"leftfolderTopbar\">\r\n            <button className=\"folderBack\" onClick={() => backFolder()}>\r\n              <img\r\n                className=\"folderBackArrow\"\r\n                src={leftArrow}\r\n                alt=\"Left Arrow\"\r\n              />\r\n            </button>\r\n            <p className=\"folderTitle\">{folderContent[0].folderName}</p>\r\n          </div>\r\n          <button className=\"folderClose\" onClick={() => closeFolder()}>\r\n            X\r\n          </button>\r\n        </div>\r\n        <div className=\"folderFullDownBox\">\r\n          <div className=\"folderMainContent\">\r\n            <FolderContent />\r\n          </div>\r\n        </div>\r\n        <div className=\"folderBottomBar\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Folder;\r\n","import React, { useContext } from \"react\";\r\nimport { PortfolioContext } from \"../../context/PortfolioContext\";\r\n\r\nimport \"./Txt.css\";\r\nimport txtIcon from \"../../imgs/TxtIcon.svg\";\r\nconst Txt = () => {\r\n  const { setopenTxt, txtContent } = useContext(PortfolioContext);\r\n\r\n  function closeTxt() {\r\n    setopenTxt(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"outsideTxt\">\r\n        <div className=\"txtTopBar\">\r\n          <div className=\"leftTxtTopbar\">\r\n            <img className=\"txtIconTop\" src={txtIcon} alt=\"\" />\r\n            <p className=\"txtTitle\">{txtContent[0].name}</p>\r\n          </div>\r\n          <button className=\"txtClose\" onClick={() => closeTxt()}>\r\n            X\r\n          </button>\r\n        </div>\r\n        <div className=\"txtFullDownBox\">{txtContent[0].txt}</div>\r\n        <div className=\"txtBottomBar\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Txt;\r\n","import React, { useContext } from \"react\";\r\nimport { PortfolioContext } from \"../../context/PortfolioContext\";\r\n\r\nimport \"./Galerie.css\";\r\nimport imageIcon from \"../../imgs/imageIcon.svg\";\r\nconst Galerie = () => {\r\n  const { setopenGalerie, galerieContent } = useContext(PortfolioContext);\r\n\r\n  function closeGalerie() {\r\n    setopenGalerie(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"outsideGalerie\">\r\n        <div className=\"GalerieTopBar\">\r\n          <div className=\"leftGalerieTopbar\">\r\n            <img className=\"GalerieIconTop\" src={imageIcon} alt=\"\" />\r\n            <p className=\"GalerieTitle\">Images - {galerieContent.name}</p>\r\n          </div>\r\n          <button className=\"GalerieClose\" onClick={() => closeGalerie()}>\r\n            X\r\n          </button>\r\n        </div>\r\n        <div className=\"GalerieFullDownBox\">\r\n          <img src={galerieContent.image} alt={galerieContent.name}></img>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Galerie;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Screen.css\";\r\nimport ButtonBay from \"../ButtonBay/ButtonBay\";\r\nimport Folder from \"../Folder/Folder\";\r\nimport Txt from \"../Txt/Txt\";\r\nimport Galerie from \"../Galerie/Galerie\";\r\nimport { PortfolioContext } from \"../../context/PortfolioContext\";\r\n\r\nconst Screen = () => {\r\n  const { openFolder, openTxt, openGalerie } = useContext(PortfolioContext);\r\n\r\n  var TxtType = function (el, toRotate, period) {\r\n    this.toRotate = toRotate;\r\n    this.el = el;\r\n    this.loopNum = 0;\r\n    this.period = parseInt(period, 10) || 2000;\r\n    this.txt = \"\";\r\n    this.tick();\r\n    this.isDeleting = false;\r\n  };\r\n\r\n  TxtType.prototype.tick = function () {\r\n    var i = this.loopNum % this.toRotate.length;\r\n    var fullTxt = this.toRotate[i];\r\n\r\n    if (this.isDeleting) {\r\n      this.txt = fullTxt.substring(0, this.txt.length - 1);\r\n    } else {\r\n      this.txt = fullTxt.substring(0, this.txt.length + 1);\r\n    }\r\n\r\n    this.el.innerHTML = '<span class=\"wrap\">' + this.txt + \"</span>\";\r\n\r\n    var that = this;\r\n    var delta = 200 - Math.random() * 100;\r\n\r\n    if (this.isDeleting) {\r\n      delta /= 2;\r\n    }\r\n\r\n    if (!this.isDeleting && this.txt === fullTxt) {\r\n      delta = this.period;\r\n      this.isDeleting = true;\r\n    } else if (this.isDeleting && this.txt === \"\") {\r\n      this.isDeleting = false;\r\n      this.loopNum++;\r\n      delta = 500;\r\n    }\r\n\r\n    setTimeout(function () {\r\n      that.tick();\r\n    }, delta);\r\n  };\r\n\r\n  window.onload = function () {\r\n    var elements = document.getElementsByClassName(\"typewrite\");\r\n    for (var i = 0; i < elements.length; i++) {\r\n      var toRotate = elements[i].getAttribute(\"data-type\");\r\n      var period = elements[i].getAttribute(\"data-period\");\r\n      if (toRotate) {\r\n        new TxtType(elements[i], JSON.parse(toRotate), period);\r\n      }\r\n    }\r\n    // INJECT CSS\r\n    var css = document.createElement(\"style\");\r\n    css.type = \"text/css\";\r\n    css.innerHTML =\r\n      \".typewrite > .wrap { border-right: 0.08em solid transparent}\";\r\n    document.body.appendChild(css);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Screen\">\r\n      {openFolder ? (\r\n        <div className=\"ScreenFolder\">\r\n          <Folder />\r\n        </div>\r\n      ) : null}\r\n      {openTxt ? (\r\n        <div className=\"ScreenTxt\">\r\n          <Txt />\r\n        </div>\r\n      ) : null}\r\n      {openGalerie ? (\r\n        <div className=\"ScreenTxt\">\r\n          <Galerie />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"NameDiv\">\r\n        <h1 className=\"DevName\">Carlos Louro</h1>\r\n        <p\r\n          href=\"\"\r\n          className=\"typewrite\"\r\n          data-period=\"2000\"\r\n          data-type='[ \"Web Developer\", \"FullStack Developer\", \"FrontEnd Developer\", \"BackEnd Developer\" ]'\r\n        >\r\n          <span className=\"wrap\"></span>\r\n        </p>\r\n      </div>\r\n      <div className=\"ButtonBay\">\r\n        <ButtonBay />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screen;\r\n","import React from \"react\";\r\nimport \"./Monitor.css\";\r\nimport monitor from \"../../imgs/MonitorPortfolioImproved.png\";\r\nimport Screen from \"../Screen/Screen\";\r\nimport { PortfolioProvider } from \"../../context/PortfolioContext\";\r\n\r\nconst Monitor = () => {\r\n  return (\r\n    <PortfolioProvider>\r\n      <div>\r\n        <img className=\"monitor\" src={monitor} alt=\"Computer Monitor\" />\r\n        <Screen />\r\n      </div>\r\n    </PortfolioProvider>\r\n  );\r\n};\r\n\r\nexport default Monitor;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Monitor from \"./components/Monitor/Monitor\";\nimport { PortfolioProvider } from \"./context/PortfolioContext\";\nimport \"./fonts/segoe-ui.otf\";\n\nfunction App() {\n  return (\n    <PortfolioProvider>\n      <div className=\"App\">\n        <Monitor />\n      </div>\n    </PortfolioProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}